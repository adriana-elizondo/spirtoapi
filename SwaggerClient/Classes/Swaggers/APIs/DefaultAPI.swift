//
// DefaultAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class DefaultAPI {
    /**
     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func menuItemIdDelete(_id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        menuItemIdDeleteWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /menuItem/{id}
     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func menuItemIdDeleteWithRequestBuilder(_id: String) -> RequestBuilder<Void> {
        var path = "/menuItem/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func menuItemPost(body: MenuItem, completion: @escaping ((_ data: MenuItem?,_ error: Error?) -> Void)) {
        menuItemPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /menuItem
     - parameter body: (body)  

     - returns: RequestBuilder<MenuItem> 
     */
    open class func menuItemPostWithRequestBuilder(body: MenuItem) -> RequestBuilder<MenuItem> {
        let path = "/menuItem"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<MenuItem>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func menuItemsGet(completion: @escaping ((_ data: [MenuItem]?,_ error: Error?) -> Void)) {
        menuItemsGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /menuItems

     - returns: RequestBuilder<[MenuItem]> 
     */
    open class func menuItemsGetWithRequestBuilder() -> RequestBuilder<[MenuItem]> {
        let path = "/menuItems"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[MenuItem]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
